openapi: 3.0.1
info:
  version: 1.0.0
  title: Pennsieve API Version 2
  description: |
    Version 2 of the Pennsieve API.\
    \
    This is the second iteration of the Pennsieve API and will, over time, replace functionality that is currently included in the first version of the API.
  termsOfService: https://docs.pennsieve.io/page/pennsieve-terms-of-use
  contact:
    name: Pennsieve Support
    email: support@pennsieve.net
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://api2.pennsieve.io
    description: Production server
  - url: https://api2.pennsieve.net
    description: Development server
externalDocs:
  description: Find more info here
  url: https://docs.pennsieve.io
tags:
  - name: Upload Service
    description: Management of upload manifests.
    externalDocs:
      url: https://docs.pennsieve.io/reference
components:
  x-amazon-apigateway-integrations:
    manifest-service:
      type: aws_proxy
      uri: ${upload_service_lambda_arn}
      httpMethod: POST
      passthroughBehavior: when_no_match
      contentHandling: CONVERT_TO_TEXT
      payloadFormatVersion: 2.0
  securitySchemes:
    token_dataset_auth:
      type: "apiKey"
      name: "Unused"
      in: "header"
      x-amazon-apigateway-authorizer:
        identitySource: "$request.header.Authorization,$request.querystring.dataset_id"
        authorizerUri: ${authorize_lambda_invoke_uri}
        authorizerPayloadFormatVersion: "2.0"
        authorizerResultTtlInSeconds: 300
        type: "request"
        enableSimpleResponses: true
        authorizerCredentials: ${gateway_authorizer_role}
    token_auth:
      type: "apiKey"
      name: "Authorization"
      in: "header"
      x-amazon-apigateway-authorizer:
        identitySource: "$request.header.Authorization"
        authorizerUri: ${authorize_lambda_invoke_uri}
        authorizerPayloadFormatVersion: "2.0"
        authorizerResultTtlInSeconds: 300
        type: "request"
        enableSimpleResponses: true
        authorizerCredentials: ${gateway_authorizer_role}
  responses:
    Unauthorized:
      description: Incorrect authentication or user has incorrect permissions.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    Error:
      description: Server Error
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
  schemas:
    user:
      type: object
      properties:
        id:
          type: integer
          description: UserId.
        firstName:
          type: string
          description: Firstname of the user.
        lastName:
          type: string
          description: Lastname of the user.
    manifestCreateRequest:
      type: object
      properties:
        id:
          type: string
          description: UUID of the manifest.
        files:
          $ref: '#/components/schemas/manifestFiles'
    addFilesResponse:
      type: object
      description: Response for addFiles endpoint.
      properties:
        nrFilesAdded:
          description: Number of added files to the manifest.
          type: integer
        failedFiles:
          description: Array of uploadIds that were not added to manifest.
          type: array
          items:
            type: string
    manifestFiles:
      type: array
      items:
        type: object
        properties:
          uploadId:
            type: string
            description: The upload id for the file.
          s3Key:
            type: string
            description: The S3-key for the uploaded asset. (typically sessionID/uploadID)
          targetPath:
            type: string
            description: Absolute path in the datset where the file should be uploaded to.
          targetName:
            type: string
            description: Name of the uploaded file as it should appear on the platform. This includes the extension of the file.
paths:
  /manifest:
    get:
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/manifest-service'
      operationId: getManifestList
      summary: Get a list of manifest for a dataset.
      description: |
        Returns a list of manifests that are defined for a dataset.
      parameters:
        - in: query
          name: dataset_id
          schema:
            type: string
          required: true
          description: The dataset for which we want to retrieve datasets.
      security:
        - token_dataset_auth: [ ]
      tags:
        - Upload Service
      responses:
        '200':
          description: A list of manifests.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: UUID of the manifest.
                    dataset:
                      type: string
                      description: UUID of the dataset where files will be uploaded to.
                    organization:
                      type: string
                      description: Name of the organization where the dataset is located.
                    status:
                      type: string
                      description: Status of the manifest.
                    created:
                      type: string
                      description: Date when the manifest was created.
                    updated:
                      type: string
                      description: Date when the manifest was last updated.
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
    post:
      summary: Synchronize manifest with server.
      description: |
        Method to create a new manifest on the server, or to synchronize local updates to the server for existing manifests.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/manifest-service'
      operationId: syncManifest
      security:
        - token_dataset_auth: [ ]
      tags:
        - Upload Service
      parameters:
        - in: query
          name: dataset_id
          schema:
            type: string
          required: true
          description: The dataset where file will be uploaded.
      requestBody:
        description: Create a new upload manifest with files
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/manifestCreateRequest'
      responses:
        '200':
          description: The created manifest.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addFilesResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
  /manifest/{manifestId}:
    get:
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/manifest-service'
      operationId: getManifestFiles
      summary: Get files for a manifest
      security:
        - token_dataset_auth: [ ]
      tags:
        - Upload Service
      description: |
        Returns a paginated list of files that are associated with an upload manifest. \
      parameters:
        - in: query
          name: dataset_id
          schema:
            type: string
          required: true
          description: The dataset associated with the requested manifest.
        - in: path
          name: id
          required: true
          schema:
            type: string
            minimum: 1
          description: The UUID of the Upload Manifest.
        - in: query
          name: continuation_token
          schema:
            type: string
          required: false
          description: The UploadID of the last returned item in the previous page.
        - in: query
          name: limit
          schema:
            type: integer
            default: 100
            maximum: 1000
          description: The number of returned files per page.
        - in: query
          name: status
          schema:
            type: string
          required: false
          description: Filter by upload status. Valid entries are Initiated, Synced, Imported, Finalized, Verified, Failed, Removed, Unknown.
      responses:
        '200':
          description: The requested files for a manifest.
          content:
            application/json:
              schema:
                type: object
                description: Successfull created new manifest.
                properties:
                  id:
                    type: string
                    description: UUID of the manifest.
                  dataset:
                    type: string
                    description: UUID of the dataset where files will be uploaded to.
                  organization:
                    type: string
                    description: Name of the organization where the dataset is located.
                  status:
                    type: string
                    description: Status of the manifest.
                  created:
                    type: string
                    description: Date when the manifest was created.
                  updated:
                    type: string
                    description: Date when the manifest was last updated.
                  files:
                    $ref: '#/components/schemas/manifestFiles'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
    delete:
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/manifest-service'
      operationId: deleteManifest
      summary: Delete a previously created manifest.
      security:
        - token_auth: [ ]
      tags:
        - Upload Service
      description: |
        Deleting a manifest can be useful when a manifest was created but is no longer expected to be uploaded.\
        \
        If a manifest is deleted which already was deleted due to completion of the upload, this method returns success.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            minimum: 1
          description: The UUID of the Upload Manifest.
      responses:
        '200':
          description: Successfully deleted the manifest.
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
        default:
          description: Success







