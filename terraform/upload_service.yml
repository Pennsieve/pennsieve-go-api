openapi: 3.0.1
info:
  version: "3.0"
  title: Pennsieve API Version 2
  description: |
    Version 3.0.0 of the Pennsieve API.\
    \
    This is the second iteration of the Pennsieve API and will, over time, replace functionality that is currently included in the first version of the API.
  termsOfService: https://docs.pennsieve.io/page/pennsieve-terms-of-use
  contact:
    name: Pennsieve Support
    email: support@pennsieve.net
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://api2.pennsieve.io
    description: Production server
  - url: https://api2.pennsieve.net
    description: Development server
externalDocs:
  description: Find more info here
  url: https://docs.pennsieve.io
tags:
  - name: Upload Service
    description: Management of upload manifests.
    externalDocs:
      url: https://docs.pennsieve.io/reference
components:
  x-amazon-apigateway-integrations:
    github-service:
      type: aws_proxy
      uri: ${github_service_lambda_arn}
      httpMethod: POST
      passthroughBehavior: when_no_match
      contentHandling: CONVERT_TO_TEXT
      payloadFormatVersion: 2.0
    manifest-service:
      type: aws_proxy
      uri: ${upload_service_lambda_arn}
      httpMethod: POST
      passthroughBehavior: when_no_match
      contentHandling: CONVERT_TO_TEXT
      payloadFormatVersion: 2.0
    model-service:
      type: aws_proxy
      uri: ${model_service_lambda_arn}
      httpMethod: POST
      passthroughBehavior: when_no_match
      contentHandling: CONVERT_TO_TEXT
      payloadFormatVersion: 2.0
    publishing-service:
      type: aws_proxy
      uri: ${publishing_service_lambda_arn}
      httpMethod: POST
      passthroughBehavior: when_no_match
      contentHandling: CONVERT_TO_TEXT
      payloadFormatVersion: 2.0
    datasets-service:
      type: aws_proxy
      uri: ${datasets_service_lambda_arn}
      httpMethod: POST
      passthroughBehavior: when_no_match
      contentHandling: CONVERT_TO_TEXT
      payloadFormatVersion: 2.0
    packages-service:
      type: aws_proxy
      uri: ${packages_service_lambda_arn}
      httpMethod: POST
      passthroughBehavior: when_no_match
      contentHandling: CONVERT_TO_TEXT
      payloadFormatVersion: 2.0
    imaging-service:
      type: aws_proxy
      uri: ${imaging_service_lambda_arn}
      httpMethod: POST
      passthroughBehavior: when_no_match
      contentHandling: CONVERT_TO_TEXT
      payloadFormatVersion: 2.0
    import-service:
      type: aws_proxy
      uri: ${import_service_lambda_arn}
      httpMethod: POST
      passthroughBehavior: when_no_match
      contentHandling: CONVERT_TO_TEXT
      payloadFormatVersion: 2.0
    integration-service:
      type: aws_proxy
      uri: ${integration_service_lambda_arn}
      httpMethod: POST
      passthroughBehavior: when_no_match
      contentHandling: CONVERT_TO_TEXT
      payloadFormatVersion: 2.0
    rehydration-service:
      type: aws_proxy
      uri: ${rehydration_service_lambda_arn}
      httpMethod: POST
      passthroughBehavior: when_no_match
      contentHandling: CONVERT_TO_TEXT
      payloadFormatVersion: 2.0
    readme-service:
      type: aws_proxy
      uri: ${readme_service_lambda_arn}
      httpMethod: POST
      passthroughBehavior: when_no_match
      contentHandling: CONVERT_TO_TEXT
      payloadFormatVersion: 2.0
    account-service:
      type: aws_proxy
      uri: ${account_service_lambda_arn}
      httpMethod: POST
      passthroughBehavior: when_no_match
      contentHandling: CONVERT_TO_TEXT
      payloadFormatVersion: 2.0
    compute-node-service:
      type: aws_proxy
      uri: ${compute_node_service_lambda_arn}
      httpMethod: POST
      passthroughBehavior: when_no_match
      contentHandling: CONVERT_TO_TEXT
      payloadFormatVersion: 2.0
    app-deploy-service:
      type: aws_proxy
      uri: ${app_deploy_service_lambda_arn}
      httpMethod: POST
      passthroughBehavior: when_no_match
      contentHandling: CONVERT_TO_TEXT
      payloadFormatVersion: 2.0
    drs-service:
      type: aws_proxy
      uri: ${drs_service_lambda_arn}
      httpMethod: POST
      passthroughBehavior: when_no_match
      contentHandling: CONVERT_TO_TEXT
      payloadFormatVersion: 2.0
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

    BasicAuth:
      type: http
      scheme: basic

    PassportAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

    token_manifest_auth:
      type: "apiKey"
      name: "Unused"
      in: "header"
      x-amazon-apigateway-authorizer:
        identitySource: "$request.header.Authorization,$request.querystring.manifest_id"
        authorizerUri: ${authorize_lambda_invoke_uri}
        authorizerPayloadFormatVersion: "2.0"
        authorizerResultTtlInSeconds: 300
        type: "request"
        enableSimpleResponses: true
        authorizerCredentials: ${gateway_authorizer_role}
    token_dataset_auth:
      type: "apiKey"
      name: "Unused"
      in: "header"
      x-amazon-apigateway-authorizer:
        identitySource: "$request.header.Authorization,$request.querystring.dataset_id"
        authorizerUri: ${authorize_lambda_invoke_uri}
        authorizerPayloadFormatVersion: "2.0"
        authorizerResultTtlInSeconds: 300
        type: "request"
        enableSimpleResponses: true
        authorizerCredentials: ${gateway_authorizer_role}
    token_auth:
      type: "apiKey"
      name: "Authorization"
      in: "header"
      x-amazon-apigateway-authorizer:
        identitySource: "$request.header.Authorization"
        authorizerUri: ${authorize_lambda_invoke_uri}
        authorizerPayloadFormatVersion: "2.0"
        authorizerResultTtlInSeconds: 300
        type: "request"
        enableSimpleResponses: true
        authorizerCredentials: ${gateway_authorizer_role}
    token_workspace_auth:
      type: "apiKey"
      name: "Unused"
      in: "header"
      x-amazon-apigateway-authorizer:
        identitySource: "$request.header.Authorization,$request.querystring.organization_id"
        authorizerUri: ${authorize_lambda_invoke_uri}
        authorizerPayloadFormatVersion: "2.0"
        authorizerResultTtlInSeconds: 300
        type: "request"
        enableSimpleResponses: true
        authorizerCredentials: ${gateway_authorizer_role}
  responses:
    Unauthorized:
      description: Incorrect authentication or user has incorrect permissions.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    Error:
      description: Server Error
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
  schemas:
    user:
      type: object
      properties:
        id:
          type: integer
          description: UserId.
        firstName:
          type: string
          description: Firstname of the user.
        lastName:
          type: string
          description: Lastname of the user.
    manifestCreateRequest:
      type: object
      properties:
        id:
          type: string
          description: UUID of the manifest.
        files:
          $ref: '#/components/schemas/manifestFiles'
    addFilesResponse:
      type: object
      description: Response for addFiles endpoint.
      properties:
        nrFilesAdded:
          description: Number of added files to the manifest.
          type: integer
        failedFiles:
          description: Array of uploadIds that were not added to manifest.
          type: array
          items:
            type: string
    autocompleteResponse:
      type: object
      description: Response for autocomplet endpoint.
      properties:
        values:
          description: Array of values.
          type: array
          items:
            type: string
    manifestFiles:
      type: array
      items:
        type: object
        properties:
          uploadId:
            type: string
            description: The upload id for the file.
          s3Key:
            type: string
            description: The S3-key for the uploaded asset. (typically sessionID/uploadID)
          targetPath:
            type: string
            description: Absolute path in the datset where the file should be uploaded to.
          targetName:
            type: string
            description: Name of the uploaded file as it should appear on the platform. This includes the extension of the file.
    surveyResponse:
      type: object
      properties:
        questionId:
          type: integer
          description: the intake question number
        response:
          type: string
          description: the user response to the intake question
    datasetProposal:
      type: object
      properties:
        userId:
          type: integer
          description: the user id number
        proposalId:
          type: integer
          description: the proposal id number
        proposalNodeId:
          type: string
          description: the proposal node id
        name:
          type: string
          description: the name of the dataset proposal
        description:
          type: string
          description: the dataset proposal short description
        repositoryId:
          type: integer
          description: the repository id
        status:
          type: string
          description: the dataset proposal status
        survey:
          type: array
          items:
            $ref: "#/components/schemas/surveyResponse"
    datasetProposalsList:
      type: array
      items:
        $ref: "#/components/schemas/datasetProposal"
    proposalCreateRequest:
      type: object
      items:
        $ref: "#/components/schemas/datasetProposal"
    restoreRequest:
      type: object
      properties:
        nodeIds:
          type: array
          items:
            type: string
          description: the node ids of the items to restore
    restoreResponse:
      type: object
      properties:
        success:
          type: array
          items:
            type: string
          description: the node ids for which restore has started
        failures:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              error:
                type: string
          description: any restore failures grouped by node id
    integrationRequest:
      type: object
      properties:
        applicationId:
          type: integer
          description: the identifier of the application
        datasetId:
          type: string
          description: the identifier of the application
        packageIds:
          type: array
          description: the packageIds
          items:
            type: string
    integrationResponse:
      type: object
      properties:
        integrationId:
          type: string
          description: the UUID of the integration execution
    integrationGetResponse:
      type: object
      properties:
        uuid:
          type: string
          description: the UUID of the integration execution
        name:
          type: string
          description: the name of the workflow instance
        applicationId:
          type: integer
          description: the id of the application
        datasetNodeId:
          type: string
          description: the dataset nodeId
        packageIds:
          type: array
          description: the packageIds
          items:
            type: string
        startedAt:
          type: string
          description: the timestamp when the workflow instance was started
        completedAt:
          type: string
          description: the timestamp when the workflow instance completed

    workflowInstanceStatusResponse:
      type: object
      properties:
        uuid:
          type: string
          description: the UUID of the workflow instance
        status:
          type: string
          description: the status of the overall workflow instance
        startedAt:
          type: string
          description: the timestamp when the workflow instance was started
        completedAt:
          type: string
          description: the timestamp when the workflow instance completed
        processors:
          type: array
          items:
            type: object
            properties:
              uuid:
                type: string
                description: the UUID of the processor
              status:
                type: string
                description: the status of the individual processo
              startedAt:
                type: string
                description: the timestamp when the processor was started
              completedAt:
                type: string
                description: the timestamp when the processor completed

    workflowInstanceLogsGetResponse:
      type: object
      properties:
        messages:
          type: array
          description: the workflow instance processor messages
          items:
            type: object
            properties:
              timestamp:
                type: string
                description: The message timestamp
              message:
                type: string
                description: The json string message
              ingestionTime:
                type: string
                description: The message ingestion time

    microctTemporarySessionResponse:
      type: object
      description: a role with temporary, read-only S3 access to a MicroCT package's viewer assets
      properties:
        access_key_id:
          type: string
          description: The access key ID that identifies the temporary security credentials
        secret_access_key:
          type: string
          description: The secret access key that can be used to sign requests
        session_token:
          type: string
          description: The token that users must pass to the service API to use the temporary credentials
        expiration:
          type: string
          description: The date on which the current credentials expire
        bucket:
          type: string
          description: The bucket that stores MicroCT package's viewer assets
        prefix:
          type: string
          description: Root path of the MicroCT package's viewer assets
      required:
        - access_key_id
        - secret_access_key
        - session_token
        - expiration
        - bucket
        - prefix

    importFile:
      type: object
      description: import file metadata for upload tracking and import processing
      properties:
        uploadKey:
          type: string
          description: (unique) S3 key where the file will be uploaded to under the manifest key
        filePath:
          type: string
          description: relative file path and full file name (including extension)
      required:
        - uploadKey
        - filePath
    createImportManifestRequest:
      type: object
      description: request to instantiate an import manifest
      properties:
        integrationId:
          type: string
          format: uuid
          description: (optional) the UUID of the integration task associated with the import
        packageId:
          type: string
          description: (optional) Pennsieve package the import should apply to
        importType:
          type: string
          enum:
            - timeseries
        files:
          type: array
          items:
            $ref: "#/components/schemas/importFile"
      required:
        - files
        - importType
    importManifestResponse:
      type: object
      description: import manifest response object
      properties:
        id:
          type: string
          format: uuid
          description: the ID of the import manifest
        integrationId:
          type: string
          format: uuid
          description: (optional) the integration task associated with the import
        datasetId:
          type: string
          description: Pennsieve dataset the import applies to
        packageId:
          type: string
          description: (optional) Pennsieve package the import applies to
        importType:
          type: string
      required:
        - id
        - datasetId
        - files
        - importType
    importPresignUploadResponse:
      type: object
      description: a pre-signed S3 URL
      properties:
        url:
          type: string
          description: the pre-signed S3 URL
      required:
        - url

    rehydrationRequest:
      type: object
      properties:
        datasetId:
          type: integer
          description: the datasetId
        datasetVersionId:
          type: integer
          description: the datasetVersion
    rehydrationResponse:
      type: object
      properties:
        rehydrationId:
          type: string
          description: the uuid of the rehydration execution
    pennsieveAccountsGetResponse:
      type: object
      properties:
        accountId:
          type: string
          description: the accountId of the Pennsieve Account
        accountType:
          type: string
          description: the account type of Pennsieve Account
    accountRequest:
      type: object
      properties:
        accountId:
          type: string
          description: the registered accountId
        accountType:
          type: string
          description: the type of account
        roleName:
          type: string
          description: the name of the created role
        externalId:
          type: string
          description: a unique identifier for the role
    postAccountsResponse:
      type: object
      properties:
        uuid:
          type: string
          description: the uuid of the created compute resource account
    accountsGetResponse:
      type: object
      properties:
        uuid:
          type: string
          description: the uuid of the compute resource account
        accountId:
          type: string
          description: the accountId of the compute resource account
        accountType:
          type: string
          description: the account type of compute resource account
        roleName:
          type: string
          description: the name of the role in the compute resource account
        externalId:
          type: string
          description: the generated externalId for compute resource account
        organizationId:
          type: string
          description: the organization of the role creator for the compute resource account
        userId:
          type: string
          description: the user that created the role for the compute resource account
    computeNodeRequest:
      type: object
      properties:
        name:
          type: string
          description: the name of the compute node
        description:
          type: string
          description: the description of the compute node
        account:
          type: object
          description: the registered account
          properties:
            uuid:
              type: string
              description: the uuid of the compute resource account
            accountId:
              type: string
              description: the accountId of the compute resource account
            accountType:
              type: string
              description: the account type of compute resource account
        environment:
          type: string
          description: the compute node environment
    computeNodesGetResponse:
      type: object
      properties:
        uuid:
          type: string
          description: the uuid of the compute node
        computeNodeGatewayUrl:
          type: string
          description: the url of the compute node
        efsId:
          type: string
          description: the ID of the EFS storage
        workflowManagerUrl:
          type: string
          description: the workflow manager URL
        environment:
          type: string
          description: the compute node environment
        account:
          type: object
          description: the compute resource account
          properties:
            uuid:
              type: string
              description: the uuid of the compute resource account
            accountId:
              type: string
              description: the accountId of the compute resource account
            accountType:
              type: string
              description: the account type of compute resource account
        createdAt:
          type: string
          description: the UTC timestamp when the compute node was created
        queueUrl:
          type: string
          description: the url of the compute node queue
        organizationId:
          type: string
          description: the organization the compute node was created in
        userId:
          type: string
          description: the user that created the compute node
    postComputeNodesResponse:
      type: object
      properties:
        postResponse:
          type: string
          description: the response from initiating creation of a compute node
    deleteComputeNodesResponse:
      type: object
      properties:
        deleteResponse:
          type: string
          description: the response from initiating deletion of a compute node
    githubPostRegisterRequest:
      type: object
      properties:
        code:
          type: string
          description: OAuth code returned by Github OAuth authentication
        installation_id:
          type: string
          description: The installation id of the Pennsieve GitHub App
    githubProfileResponse:
      type: object
      properties:
        username:
          type: string
          description: Github User ID
        email:
          type: string
          description: Email associated with GitHub Account
        url:
          type: string
          description: Url to GitHub profile page
        avatar_url:
          type: string
          description: Url to Github user avatar
    githubWebhookEvent:
      type: object
      properties:
        action:
          type: string
          description: the name of the action
    githubWebhookEventAccepted:
      type: object
      properties:
        request_id:
          type: string
          description: the request id for the webhook event
        request_type:
          type: string
          description: the GitHub event type (release)
        request_origin:
          type: string
          description: identifier for the GitHub item from which the request is being generated (repo url)
        request_target:
          type: string
          description: identifier for the Pennsieve item on which the request is being executed (dataset, external repo)
    applicationRequest:
      type: object
      properties:
        name:
          type: string
          description: the name of the application
        description:
          type: string
          description: the description of the application
        applicationType:
          type: string
          description: the type of application
        resources:
          type: object
          description: the resources for the application
          properties:
            cpu:
              type: string
              description: the memory value for the application
            memory:
              type: string
              description: the cpu value for the application
        account:
          type: object
          description: the registered compute resource
          properties:
            uuid:
              type: string
              description: the uuid of the compute resource account
            accountId:
              type: string
              description: the accountId of the compute resource account
            accountType:
              type: string
              description: the account type of compute resource account
        computeNode:
          type: object
          description: the compute node where the application will be registered
          properties:
            uuid:
              type: string
              description: the uuid of the compute node
            efsId:
              type: string
              description: the efsId of the compute node
        source:
          type: object
          description: the source for the application
          properties:
            type:
              type: string
              description: the type of source, for example github
            url:
              type: string
              description: the git url of the source
        environment:
          type: string
          description: the compute node environment
    applicationsGetResponse:
      type: object
      properties:
        name:
          type: string
          description: the name of the application
        description:
          type: string
          description: the description of the application
        applicationType:
          type: string
          description: the type of application
        resources:
          type: object
          description: the resources for the application
          properties:
            cpu:
              type: string
              description: the memory value for the application
            memory:
              type: string
              description: the cpu value for the application
        account:
          type: object
          description: the registered compute resource
          properties:
            uuid:
              type: string
              description: the uuid of the compute resource account
            accountId:
              type: string
              description: the accountId of the compute resource account
            accountType:
              type: string
              description: the account type of compute resource account
        computeNode:
          type: object
          description: the compute node where the application will be registered
          properties:
            uuid:
              type: string
              description: the uuid of the compute node
            efsId:
              type: string
              description: the efsId of the compute node
        source:
          type: object
          description: the source for the application
          properties:
            type:
              type: string
              description: the type of source, for example github
            url:
              type: string
              description: the git url of the source
        destination:
          type: object
          description: the destination repository for the application
          properties:
            type:
              type: string
              description: the type of destination, for example ecr
            url:
              type: string
              description: the url of the destination
        environment:
          type: string
          description: the compute node environment
        createdAt:
          type: string
          description: the UTC timestamp when the compute node was created
        organizationId:
          type: string
          description: the organization the compute node was created in
        userId:
          type: string
          description: the user that created the compute node
    postApplicationsResponse:
      type: object
      properties:
        deploymentId:
          type: string
          description: a unique string identifying the app deployment
        application:
          $ref: '#/components/schemas/applicationsGetResponse'
    deleteApplicationsResponse:
      type: object
      properties:
        deleteResponse:
          type: string
          description: the response from initiating deletion of an application
    getDeploymentResponse:
      type: object
      properties:
        deploymentId:
          type: string
          description: The unique identifier for the deployment.
        applicationId:
          type: string
          description: The ID of the application associated with the deployment.
        initiatedAt:
          type: string
          format: date-time
          description: Timestamp when the deployment was initiated.
        lastStatus:
          type: string
          description: The last known status of the deployment.
        desiredStatus:
          type: string
          description: The desired status of the deployment.
        taskArn:
          type: string
          description: ARN of the task associated with the deployment.
        updatedAt:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when the state change occurred.
        createdAt:
          type: string
          format: date-time
          nullable: true
          description: The timestamp when the task was created (entered PENDING state).
        startedAt:
          type: string
          format: date-time
          nullable: true
          description: The timestamp when the task started (entered RUNNING state).
        stoppedAt:
          type: string
          format: date-time
          nullable: true
          description: The timestamp when the task stopped (entered STOPPED state).
        stopCode:
          type: string
          nullable: true
          description: An optional code indicating why the task was stopped.
        stoppedReason:
          type: string
          nullable: true
          description: A string indicating the reason why the task was stopped.
        errored:
          type: boolean
          description: Indicates whether the task encountered an error.
    applicationDeployRequest:
      type: object
      properties:
        source:
          type: object
          description: the source for the application
          properties:
            type:
              type: string
              description: the type of source, for example github
            url:
              type: string
              description: the git url of the source
        destination:
          type: object
          description: the destination repository for the application
          properties:
            type:
              type: string
              description: the type of destination, for example ecr
            url:
              type: string
              description: the url of the destination
        account:
          type: object
          description: the registered compute resource
          properties:
            uuid:
              type: string
              description: the uuid of the compute resource account
            accountId:
              type: string
              description: the accountId of the compute resource account
            accountType:
              type: string
              description: the account type of compute resource account
    postApplicationsDeployResponse:
      type: object
      properties:
        deploymentId:
          type: string
          description: a unique string identifying the initiated deployment
    workflowRequest:
      type: object
      properties:
        computeNode:
          type: object
          description: the compute node
          properties:
            uuid:
              type: string
              description: the uuid of the compute node
            computeNodeGatewayUrl:
              type: string
              description: the URL of the compute node
        datasetId:
          type: string
          description: the identifier of the application
        packageIds:
          type: array
          description: the packageIds
          items:
            type: string
        workflow:
          type: array
          description: the applications to run in the workflow
          items:
            type: object
            properties:
              uuid:
                type: string
              applicationId:
                type: string
              applicationType:
                type: string
              params:
                type: object
                description: application specific params
              commandArguments:
                type: array
                description: command arguments to pass to the application
                items:
                  type: string
        params:
          type: object
          description: integration params
    workflowResponse:
      type: object
      properties:
        integrationId:
          type: string
          description: the UUID of the integration execution
    workflowInstanceStatusRequest:
      type: object
      properties:
        uuid:
          type: string
          description: the UUID of the workflow instance or processor
        status:
          type: string
          description: the current status of the workflow instance or processor
        timestamp:
          type: integer
          description: the timestamp when the status change occured

    trackRepositoryRequest:
      type: object
      properties:
        origin:
          type: string
          description: the name of the origin (e.g., GitHub)
        url:
          type: string
          description: the URL of the external repository
        type:
          type: string
          description: the purpose of tracking (publishing or appstore)
    externalRepository:
      type: object
      properties:
        id:
          type: integer
          description: the id number of the external repository
        origin:
          type: string
          description: the name of the origin (e.g., GitHub)
        url:
          type: string
          description: the URL of the external repository
        type:
          type: string
          description: the purpose of tracking (publishing or appstore)
        status:
          type: string
          description: the tracking status (enabled, disabled, suspended)
        organization_id:
          type: integer
          description: the Pennsieve Workspace organization id
        user_id:
          type: integer
          description: the Pennsieve User id
        dataset_id:
          type: integer
          description: the id of the dataset in the Pennsieve Workspace for publishing repos
        application_id:
          type: string
          description: the UUID of the Application in the AppStore
        created_at:
          type: string
          description: the date and time when the external repo was created
        updated_at:
          type: string
          description: the date and time when the external repo was updated
    externalReposResponse:
      type: object
      properties:
        page:
          type: integer
        size:
          type: integer
        count:
          type: integer
        repos:
          type: array
          items:
            $ref: "#/components/schemas/externalRepository"

    updateRepositoryRequest:
      type: object
      properties:
        id:
          type: integer
        url:
          type: string
        name:
          type: string
        subtitle:
          type: string
        auto_publish:
          type: boolean
        tags:
          type: array
        sync:
          type: object
          properties:
            banner:
              type: boolean
            readme:
              type: boolean
            changelog:
              type: boolean
            license:
              type: boolean
            contributors:
              type: boolean

    publishRepositoryRequest:
      type: object
      properties:
        id:
          type: integer
        url:
          type: string
        type:
          type: string

    githubRepo:
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        name:
          type: string
        full_name:
          type: string
        description:
          type: string
        html_url:
          type: string
        license:
          type: object
          properties:
            key:
              type: string
            name:
              type: string
            spdx_id:
              type: string
            url:
              type: string
            node_id:
              type: string
    githubReposResponse:
      type: object
      properties:
        page:
          type: integer
        size:
          type: integer
        count:
          type: integer
        repos:
          type: array
          items:
            $ref: "#/components/schemas/githubRepo"
    
    drsObjectRequest:
      type: object
      properties:
        id:
          type: string
          description: |
            DRS Object ID is a unique identifier following the guidelines:
            - Contains uppercase and lowercase letters, decimal digits, hyphen, period, underscore, and tilde.
            - Must be percent-encoded if it contains other characters to ensure valid API calls.
            - One DRS ID always returns the same object data.
            - Example: "aBc-123_XYZ~456"
          pattern: "^[A-Za-z0-9._~%]*(?:%[0-9A-Fa-f]{2})?[A-Za-z0-9._~%]*$"
          example: "abc-123_XYZ~456"

    drsObjectResponse:
      type: object
      required:
        - id
        - self_uri
        - size
        - created_time
        - checksums
      properties:
        id:
          type: string
          description: "An identifier unique to this DrsObject."
          example: "abc-123_XYZ~456"
        name:
          type: string
          description: |
            A string that can be used to name a DrsObject. This string is made up of uppercase and lowercase letters,
            decimal digits, hyphen, period, and underscore [A-Za-z0-9.-_].
          example: "example_object"
        self_uri:
          type: string
          format: uri
          description: |
            A drs:// hostname-based URI that tells clients how to access this object. 
            This field makes DRS objects self-contained and easier for clients to store and pass around.
            Example: "drs://drs.example.org/314159"
          example: "drs://drs.example.org/314159"
        size:
          type: integer
          format: int64
          description: "For blobs, the blob size in bytes. For bundles, the cumulative size in bytes of items in the contents field."
          example: 123456789
        created_time:
          type: string
          format: date-time
          description: "Timestamp of content creation in RFC3339."
          example: "2019-08-24T14:15:22Z"
        updated_time:
          type: string
          format: date-time
          description: "Timestamp of content update in RFC3339. Identical to created_time in systems that do not support updates."
          example: "2019-08-24T14:15:22Z"
        version:
          type: string
          description: "A string representing a version."
          example: "v1.0"
        mime_type:
          type: string
          description: "A string providing the mime-type of the DrsObject."
          example: "application/json"
        checksums:
          type: array
          description: "The checksum of the DrsObject. At least one checksum must be provided."
          items:
            type: object
            properties:
              checksum:
                type: string
                description: "The checksum value."
                example: "e4aaff0c81c7c2d2b5f1e7c6a7de7943"
              type:
                type: string
                description: "The type of checksum (e.g., MD5, SHA-256)."
                example: "md5"
        access_methods:
          type: array
          description: "The list of access methods that can be used to fetch the DrsObject."
          items:
            type: object
            properties:
              type:
                type: string
                description: "The type of access method (e.g., https, s3)."
                example: "https"
              access_url:
                type: object
                properties:
                  url:
                    type: string
                    description: "The URL to access the object."
                    example: "https://example.org/object/314159"
        contents:
          type: array
          description: |
            If not set, this DrsObject is a single blob. If set, this DrsObject is a bundle containing the listed ContentsObjects.
          items:
            type: object
            properties:
              id:
                type: string
                description: "An identifier unique to the ContentsObject."
              name:
                type: string
                description: "The name of the ContentsObject."
        description:
          type: string
          description: "A human readable description of the DrsObject."
          example: "This is an example DRS object."
        aliases:
          type: array
          description: |
            A list of strings that can be used to find other metadata about this DrsObject from external metadata sources.
            These aliases can be used to represent secondary accession numbers or external GUIDs.
          items:
            type: string
            example: "example-alias"

    getDrsObjectWithPassportRequest:
      type: object
      properties:
        expand:
          type: boolean
          description: |
            If false and the object_id refers to a bundle, then the ContentsObject array contains only those objects 
            directly contained in the bundle. If true and the object_id refers to a bundle, then the entire set of objects 
            in the bundle is expanded.
          example: false
        passports:
          type: array
          description: |
            The encoded JWT GA4GH Passports that contain embedded Visas. 
            The overall JWT is signed as are the individual Passport Visas.
          items:
            type: string
            example: "eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIn0..."

    getDrsObjectWithPassportResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/drsObjectResponse'
      description: "Response containing the DRS object metadata and access methods."

    multipleDrsObjectsRequest:
      type: object
      properties:
        passports:
          type: array
          description: |
            An array of encoded JWT GA4GH Passports that contain embedded Visas. 
            The overall JWT is signed as are the individual Passport Visas.
          items:
            type: string
          example:
            - "eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIn0.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
        bulk_object_ids:
          type: array
          description: "An array of ObjectIDs."
          items:
            type: string
          example:
            - "object-1"
            - "object-2"

    multipleDrsObjectsResponse:
      type: object
      properties:
        summary:
          type: object
          description: "A summary of what was resolved."
          properties:
            total_objects:
              type: integer
              description: "Total number of objects requested."
              example: 10
            resolved_count:
              type: integer
              description: "Number of successfully resolved objects."
              example: 8
            unresolved_count:
              type: integer
              description: "Number of objects that could not be resolved."
              example: 2
        unresolved_drs_objects:
          type: array
          description: "Error codes for each unresolved DRS object."
          items:
            type: object
            properties:
              object_id:
                type: string
                description: "The ID of the DRS object that could not be resolved."
                example: "object-1"
              error_code:
                type: string
                description: "The error code indicating why the object could not be resolved."
                example: "404"
        resolved_drs_object:
          type: array
          description: "Array of objects (DrsObject) that were successfully resolved."
          items:
            $ref: '#/components/schemas/drsObjectResponse'

    fetchUrlsRequest:
      type: object
      required:
        - object_id
        - access_ids
      properties:
        object_id:
          type: string
          description: "DrsObject identifier"
          example: "abc-123_XYZ~456"
        access_ids:
          type: array
          description: "List of access_ids from the access_methods list of a DrsObject"
          items:
            type: string
          example:
            - "access_id_1"
            - "access_id_2"

    fetchUrlResponse:
      type: object
      required:
        - url
      properties:
        url:
          type: string
          format: uri
          description: "A fully resolvable URL that can be used to fetch the actual object bytes."
          example: "https://example.org/object/314159/access/abcd1234"
        headers:
          type: array
          description: |
            An optional list of headers to include in the HTTP request to `url`. 
            These headers can be used to provide auth tokens required to fetch the object bytes.
          items:
            type: string
            example: "Authorization: Bearer <token>"

    fetchUrlWithPassportRequest:
      type: object
      properties:
        passports:
          type: array
          description: |
            The encoded JWT GA4GH Passport that contains embedded Visas. 
            The overall JWT is signed as are the individual Passport Visas.
          items:
            type: string
            example: "eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIn0..."


    bulkFetchUrlsRequest:
      type: object
      properties:
        passports:
          type: array
          description: |
            The encoded JWT GA4GH Passports that contain embedded Visas. 
            The overall JWT is signed as are the individual Passport Visas.
          items:
            type: string
            example: "eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIn0..."
        bulk_object_access_ids:
          type: array
          description: |
            An array of objects containing object_id and access_id pairs, 
            used to fetch URLs for multiple DRS objects.
          items:
            type: object
            properties:
              object_id:
                type: string
                description: "DrsObject identifier"
                example: "abc-123_XYZ~456"
              access_id:
                type: string
                description: "An access_id from the access_methods list of a DrsObject"
                example: "access_id_1"
    bulkFetchUrlsResponse:
      type: object
      properties:
        summary:
          type: object
          description: "A summary of what was resolved."
          properties:
            total_objects:
              type: integer
              description: "Total number of objects requested."
              example: 10
            resolved_count:
              type: integer
              description: "Number of successfully resolved objects."
              example: 8
            unresolved_count:
              type: integer
              description: "Number of objects that could not be resolved."
              example: 2
        unresolved_drs_objects:
          type: array
          description: "Error codes for each unresolved DRS object."
          items:
            type: object
            properties:
              object_id:
                type: string
                description: "The ID of the DRS object that could not be resolved."
                example: "object-1"
              error_code:
                type: string
                description: "The error code indicating why the object could not be resolved."
                example: "404"
        resolved_drs_object_access_urls:
          type: array
          description: "Array of objects containing resolved DRS object IDs and their access URLs."
          items:
            type: object
            properties:
              object_id:
                type: string
                description: "The ID of the successfully resolved DRS object."
                example: "object-2"
              access_url:
                type: string
                description: "The URL to access the object's bytes."
                example: "https://example.org/object/314159/access/abcd1234"

    repository:
      type: object
      properties:
        origin:
          type: string
        name:
          type: string
        full_name:
          type: string
        description:
          type: string
        url:
          type: string
        tracking:
          type: boolean
        type:
          type: string
        details:
          type: object
          properties:
            organization_id:
              type: integer
            user_id:
              type: integer
            dataset_id:
              type: integer
            application_id:
              type: string

    repositoriesResponse:
      type: object
      properties:
        page:
          type: integer
        size:
          type: integer
        count:
          type: integer
        repos:
          type: array
          items:
            $ref: "#/components/schemas/repository"
    
    ServiceInfoResponse:
      type: object
      properties:
        id:
          type: string
          description: "Unique ID of this service."
        name:
          type: string
          description: "Name of the service."
        type:
          type: object
          properties:
            group:
              type: string
              description: "org.ga4gh"
            artifact:
              type: string
              description: "drs"
        description:
          type: string
          description: "Description of the service."
        organization:
          type: object
          properties:
            name:
              type: string
              description: "Name of the organization providing the service."
            url:
              type: string
              description: "URL of the organization."
        contactUrl:
          type: string
          description: "Contact URL of the service."
        documentationUrl:
          type: string
          description: "Documentation URL for the service."
        createdAt:
          type: string
          description: "Timestamp when the service was created."
        updatedAt:
          type: string
          description: "Timestamp when the service was last updated."

    InternalServerError:
      type: object
      properties:
        msg:
          type: string
          description: "A detailed error message."
        status_code:
          type: integer
          description: "The integer representing the HTTP status code (e.g. 200, 404)."

paths:
  /manifest:
    get:
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/manifest-service'
      operationId: getManifestList
      summary: List manifests for dataset
      description: |
        Returns a list of manifests that are defined for a dataset.
      parameters:
        - in: query
          name: dataset_id
          schema:
            type: string
          required: true
          description: The dataset for which we want to retrieve datasets.
      security:
        - token_dataset_auth: [ ]
      tags:
        - Upload Service
      responses:
        '200':
          description: A list of manifests.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: UUID of the manifest.
                    dataset:
                      type: string
                      description: UUID of the dataset where files will be uploaded to.
                    organization:
                      type: string
                      description: Name of the organization where the dataset is located.
                    status:
                      type: string
                      description: Status of the manifest.
                    created:
                      type: string
                      description: Date when the manifest was created.
                    updated:
                      type: string
                      description: Date when the manifest was last updated.
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
    post:
      summary: Synchronize manifest
      description: |
        Method to create a new manifest on the server, or to synchronize local updates to the server for existing manifests.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/manifest-service'
      operationId: syncManifest
      security:
        - token_dataset_auth: [ ]
      tags:
        - Upload Service
      parameters:
        - in: query
          name: dataset_id
          schema:
            type: string
          required: true
          description: The dataset where file will be uploaded.
      requestBody:
        description: Create a new upload manifest with files
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/manifestCreateRequest'
      responses:
        '200':
          description: The created manifest.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addFilesResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
  /manifest/files:
    get:
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/manifest-service'
      operationId: getManifestFiles
      summary: Get files for manifest
      security:
        - token_manifest_auth: [ ]
      tags:
        - Upload Service
      description: |
        Returns a paginated list of files that are associated with an upload manifest. \
      parameters:
        - in: query
          name: manifest_id
          required: true
          schema:
            type: string
            minimum: 1
          description: The UUID of the Upload Manifest.
        - in: query
          name: continuation_token
          schema:
            type: string
          required: false
          description: The UploadID of the last returned item in the previous page.
        - in: query
          name: limit
          schema:
            type: integer
            default: 100
            maximum: 1000
          description: The number of returned files per page.
        - in: query
          name: status
          schema:
            type: string
            enum:
              - Initiated
              - Synced
              - Imported
              - Finalized
              - Verified
              - Failed
              - Removed
              - Unknown
              - null
          required: false
          description: Filter by upload status.
      responses:
        '200':
          description: The requested files for a manifest.
          content:
            application/json:
              schema:
                type: object
                description: Successfull created new manifest.
                properties:
                  id:
                    type: string
                    description: UUID of the manifest.
                  dataset:
                    type: string
                    description: UUID of the dataset where files will be uploaded to.
                  organization:
                    type: string
                    description: Name of the organization where the dataset is located.
                  status:
                    type: string
                    description: Status of the manifest.
                  created:
                    type: string
                    description: Date when the manifest was created.
                  updated:
                    type: string
                    description: Date when the manifest was last updated.
                  files:
                    $ref: '#/components/schemas/manifestFiles'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
  /manifest/status:
    get:
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/manifest-service'
      operationId: verifyFileStatus
      summary: Verify status for manifest files
      security:
        - token_manifest_auth: [ ]
      tags:
        - Upload Service
      description: |
        Returns a list of files that have the requested status on the server for the given manifest.\
        \
        You can use this endpoint to check import progress of files during or after uploading a manifest.
      parameters:
        - in: query
          name: manifest_id
          required: true
          schema:
            type: string
            minimum: 1
          description: The UUID of the Upload Manifest.
        - in: query
          name: continuation_token
          schema:
            type: string
          required: false
          description: The UploadID of the last returned item in the previous page.
        - in: query
          name: status
          schema:
            type: string
            enum:
              - Synced
              - Imported
              - Finalized
              - Verified
              - Failed
          required: true
          description: Filter by upload status.
        - in: query
          name: verify
          required: false
          schema:
            type: boolean
          description: Update status to verified for returned files. If checked, this will always check for Finalized status.
      responses:
        '200':
          description: The requested files for a manifest.
          content:
            application/json:
              schema:
                type: object
                description: Successfull returned list of files with requested status.
                properties:
                  id:
                    type: string
                    description: UUID of the manifest.
                  status:
                    type: string
                    description: The current status of the returned files.
                  files:
                    type: array
                    description: List of upload ids for files with requested status.
                    items:
                      type: string
                  continuation_token:
                    type: string
                    description: ID of the last returned item.
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
  /manifest/archive:
    post:
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/manifest-service'
      operationId: archiveManifest
      summary: Archive manifest to disk
      security:
        - token_manifest_auth: [ ]
      tags:
        - Upload Service
      description: |
        Archives a manifest by storing the manifest as a CSV file on disk.\
        \
        Manifests can be manually archived, and are archived automatically a month after creation.
      parameters:
        - in: query
          name: manifest_id
          required: true
          schema:
            type: string
            minimum: 1
          description: UUID of the manifest to be archived.
        - in: query
          name: remove
          required: true
          schema:
            type: boolean
            default: false
          description: true if files should be removed from manifest table
      responses:
        '200':
          description: Successfully submitted archive task.
          content:
            application/json:
              schema:
                type: object
                description: Successfull submitted archive task.
                properties:
                  manifest_id:
                    type: string
                    description: UUID of the manifest.
                  message:
                    type: string
                    description: Message indicating action.
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
    get:
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/manifest-service'
      operationId: getManifestArchiveURL
      summary: Get Presigned URL to Manifest archive
      security:
        - token_manifest_auth: [ ]
      tags:
        - Upload Service
      description: |
        Returns a pre-signed URL to fetch the Manifest Archive CVS file.
      parameters:
        - in: query
          name: manifest_id
          required: true
          schema:
            type: string
            minimum: 1
          description: UUID of the manifest archive to be returned.
      responses:
        '200':
          description: Successfully submitted archive task.
          content:
            application/json:
              schema:
                type: object
                description: Successfull submitted archive task.
                properties:
                  url:
                    type: string
                    description: Presigned url to fetch the manifest archive.
                  message:
                    type: string
                    description: Message indicating action.
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
    delete:
      summary: Delete an upload manifest
      description: |
        This method will permanently delete an upload manifest. \
        \
        The manifest needs to be in 'archived' state before delete is allowed.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/manifest-service'
      operationId: deleteManifestArchive
      security:
        - token_manifest_auth: [ ]
      tags:
        - Upload Service
      parameters:
        - in: query
          name: manifest_id
          required: true
          schema:
            type: string
            minimum: 1
          description: UUID of the manifest to be deleted.
      responses:
        '200':
          description: Successfully deleted the Dataset Proposal.
          content:
            application/json:
              schema:
                type: object
                description: Successfull submitted archive task.
                properties:
                  message:
                    type: string
                    description: Message indicating action.
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
  /metadata/models:
    get:
      summary: Get models for dataset
      description: |
        This method returns a list of models that are defined in a dataset.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/model-service'
      operationId: graphGetModels
      security:
        - token_dataset_auth: [ ]
      tags:
        - Metadata Service
      parameters:
        - in: query
          name: dataset_id
          schema:
            type: string
          required: true
          description: The dataset where file will be uploaded.
      responses:
        '200':
          description: The returned models.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: Response for getModels endpoint.
                  properties:
                    Count:
                      description: Number of added files to the manifest.
                      type: integer
                    CreatedAt:
                      description: Array of uploadIds that were not added to manifest.
                      type: string
                    CreatedBy:
                      description: Array of uploadIds that were not added to manifest.
                      type: string
                    Description:
                      description: Array of uploadIds that were not added to manifest.
                      type: string
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
  /metadata/query:
    post:
      summary: Search metadata graph
      description: |
        Method to create a new manifest on the server, or to synchronize local updates to the server for existing manifests.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/model-service'
      operationId: queryGraph
      security:
        - token_dataset_auth: [ ]
      tags:
        - Metadata Service|Search
      parameters:
        - in: query
          name: dataset_id
          schema:
            type: string
          required: true
          description: The dataset for which we want to retrieve datasets.
      requestBody:
        description: Query Filters
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request body for metadata querying.
              properties:
                model:
                  type: string
                  description: Requested type of returned objects.
                datasets:
                  type: array
                  description: Array of dataset node ids to search over.
                  items:
                    type: string
                filters:
                  type: array
                  description: Array of filters for the query.
                  items:
                    type: object
                    description: Filter object for query.
                    properties:
                      model:
                        type: string
                        description: The name of the model.
                      property:
                        type: string
                        description: The name of a property in the model.
                      operator:
                        type: string
                        enum:
                          - IS
                          - IS NOT
                          - EQUALS
                          - NOT EQUALS
                          - LESS THAN
                          - LESS THAN EQUALS
                          - GREATER THAN
                          - GREATER THAN EQUALS
                          - STARTS WITH
                          - CONTAINS
                      value:
                        type: string
                        description: The value of the predicate
                order_by:
                  type: string
                  description: Name of property that should be used to order the results.
      responses:
        '200':
          description: The returned results.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addFilesResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
  /metadata/package:
    get:
      summary: Get package metadata
      description: |
        This method returns all metadata records associated with the package.
        
        It includes the record that associated with the package, and all metadata records that are hierarchically parents of the associated record.
        For example, consider three models (Patient, Visit, Sample) where Patient has a relationship to Visit and Visit has a relationship to Sample. If a file is associated with a Sample record, this methods returns the sample, visit and patient metadata. 
        
        Note that the direction of the relationship is important and only relationships "upstream" are returned. This includes records that have a property that points to another record.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/model-service'
      operationId: graphGetPackageMetadata
      security:
        - token_dataset_auth: [ ]
      tags:
        - Metadata Service
      parameters:
        - in: query
          name: dataset_id
          schema:
            type: string
          required: true
          description: The dataset which contains the package.
        - in: query
          name: package_id
          schema:
            type: string
          required: true
          description: The requested package node id.
      responses:
        '200':
          description: The returned records.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: Response for  endpoint.
                  properties:
                    id:
                      description: Id of the metadata record.
                      type: string
                    model:
                      description: Name of the metadata record model.
                      type: string
                    props:
                      type: object
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
  /metadata/query/autocomplete:
    post:
      summary: Autocomplete for search
      description: |
        This endpoint returns a list of values that will return in valid query responses that include a minimum of 1 search result.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/model-service'
      operationId: autoComplete
      security:
        - token_dataset_auth: [ ]
      tags:
        - Metadata Service|Search
      parameters:
        - in: query
          name: dataset_id
          schema:
            type: string
          required: true
          description: The dataset for which we want to retrieve datasets.
      requestBody:
        description: Query Filters
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request body for metadata querying.
              properties:
                model:
                  type: string
                  description: Model for autocomplete
                property:
                  type: string
                  description: Property for autocomplete
                text:
                  type: string
                  description: Value input for autocomplete.
                filters:
                  type: array
                  description: Array of filters for the query
                  items:
                    type: object
                    description: Filter object for query.
                    properties:
                      model:
                        type: string
                        description: The name of the model.
                      property:
                        type: string
                        description: The name of a property in the model.
                      operator:
                        type: string
                        enum:
                          - IS
                          - IS NOT
                          - EQUALS
                          - NOT EQUALS
                          - LESS THAN
                          - LESS THAN EQUALS
                          - GREATER THAN
                          - GREATER THAN EQUALS
                          - STARTS WITH
                          - CONTAINS
                      value:
                        type: string
                        description: The value of the predicate
      responses:
        '200':
          description: The returned results.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/autocompleteResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /metadata/records/relationships:
    post:
      summary: Create record relationships
      description: |
        Allows the user to create relationships in bulk between existing records for a specific dataset.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/model-service'
      operationId: batchCreateRelationships
      security:
        - token_dataset_auth: [ ]
      tags:
        - Metadata Service|Records
      parameters:
        - in: query
          name: dataset_id
          schema:
            type: string
          required: true
          description: The dataset associated with the metadata that is edited
      requestBody:
        description: definition of the relationship and records to be created.
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request body for metadata querying.
              properties:
                relationship:
                  type: object
                  properties:
                    from_model:
                      type: string
                      description: Model slug for the originating model
                    relationship_name:
                      type: string
                      description: Relationship slug; direction is automatically inferred
                    to_model:
                      type: string
                      description: Model slug for the targeted model
                records:
                  type: object
                  properties:
                    from:
                      type: array
                      items:
                        type: string
                        description: List of object IDs of records of type from_model
                    to:
                      type: array
                      items:
                        type: string
                        description: List of object IDs of records of type to_model
      responses:
        '200':
          description: The returned results.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    from:
                      type: string
                    to:
                      type: string
                    type:
                      type: string
                    model_relationship_id:
                      type: string
                    name:
                      type: string
                    one_to_many:
                      type: boolean
                    created_at:
                      type: string
                    updated_at:
                      type: string
                    created_by:
                      type: string
                    updated_by:
                      type: string
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
  /publishing/info:
    get:
      summary: Get Publishing Service Information
      description: |
        This method returns a list of Publishing Service Information and URLs to fetch the associated files.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/publishing-service'
      operationId: getPublishingServiceInformation
      security:
        - token_auth: [ ]
      tags:
        - Publishing Service Information
      responses:
        '200':
          description: The returned Publishing Service Information.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: Response for getPublishingServiceInformation endpoint.
                  properties:
                    Count:
                      description: Number of Publishing Service Information pieces.
                      type: integer
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
  /publishing/repositories:
    get:
      summary: Get Publishing Repositories
      description: |
        This method returns a list of Publishing Repositories.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/publishing-service'
      operationId: getPublishingRepositories
      security:
        - token_auth: [ ]
      tags:
        - Publishing Service
      responses:
        '200':
          description: The returned Publishing Repositories.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: Response for getPublishingRepositories endpoint.
                  properties:
                    Count:
                      description: Number of Publishing Repositories.
                      type: integer
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
  /publishing/questions:
    get:
      summary: Get Proposal Questions
      description: |
        This method returns a list of intake questions that may be included in Dataset Proposals
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/publishing-service'
      operationId: getProposalQuestions
      security:
        - token_auth: [ ]
      tags:
        - Publishing Service
      responses:
        '200':
          description: The returned intake questions
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: Response for getProposalQuestions endpoint.
                  properties:
                    Count:
                      description: Number of intake questions
                      type: integer
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
  /publishing/proposal:
    get:
      summary: Get a User's Dataset Proposals
      description: |
        This method returns a list of Dataset Proposals owned by the User
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/publishing-service'
      operationId: getDatasetProposals
      security:
        - token_auth: [ ]
      tags:
        - Publishing Service
      responses:
        '200':
          description: The returned Dataset Proposals
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/datasetProposalsList"
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
    post:
      summary: Create a Dataset Proposal
      description: |
        This method will create a Dataset Proposal for the User
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/publishing-service'
      operationId: createDatasetProposal
      security:
        - token_auth: [ ]
      tags:
        - Publishing Service
      requestBody:
        description: the Dataset Proposal to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/proposalCreateRequest'
      responses:
        '201':
          description: The created Dataset Proposal.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/datasetProposalsList'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
    put:
      summary: Update a Dataset Proposal
      description: |
        This method will update a Dataset Proposal for the User
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/publishing-service'
      operationId: updateDatasetProposal
      security:
        - token_auth: [ ]
      tags:
        - Publishing Service
      requestBody:
        description: the Dataset Proposal to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/proposalCreateRequest'
      responses:
        '200':
          description: The updated Dataset Proposal.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/datasetProposalsList'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
    delete:
      summary: Delete a Dataset Proposal
      description: |
        This method will delete a Dataset Proposal for the User
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/publishing-service'
      operationId: deleteDatasetProposal
      security:
        - token_auth: [ ]
      tags:
        - Publishing Service
      parameters:
        - in: query
          name: proposal_node_id
          required: true
          schema:
            type: string
            minimum: 1
          description: The Node Id of the Dataset Proposal to be deleted.
      responses:
        '200':
          description: Successfully deleted the Dataset Proposal.
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
  /publishing/proposal/submit:
    post:
      summary: Submit a Dataset Proposal to a Repository for review
      description: |
        This method will submit a Dataset Proposal to a Repository for review.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/publishing-service'
      operationId: submitDatasetProposal
      security:
        - token_auth: [ ]
      tags:
        - Publishing Service
      parameters:
        - in: query
          name: node_id
          required: true
          schema:
            type: string
            minimum: 1
          description: The Node Id of the Dataset Proposal to be submitted.
      responses:
        '200':
          description: Successfully submitted the Dataset Proposal.
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
  /publishing/proposal/withdraw:
    post:
      summary: Withdraw the request to review a Dataset Proposal from a Repository
      description: |
        This method will withdraw the request to review a Dataset Proposal from a Repository.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/publishing-service'
      operationId: withdrawDatasetProposal
      security:
        - token_auth: [ ]
      tags:
        - Publishing Service
      parameters:
        - in: query
          name: node_id
          required: true
          schema:
            type: string
            minimum: 1
          description: The Node Id of the Dataset Proposal to be withdrawn.
      responses:
        '200':
          description: Successfully withdrew the Dataset Proposal.
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
  /publishing/submission:
    get:
      summary: Get Dataset Proposals submitted to the Repository
      description: |
        This method returns a list of Dataset Proposals that have been submitted to the Repository
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/publishing-service'
      operationId: getSubmittedDatasetProposals
      security:
        - token_auth: [ ]
      tags:
        - Publishing Service
      parameters:
        - in: query
          name: status
          required: false
          schema:
            type: string
            minimum: 1
          description: The Dataset Proposal Status
      responses:
        '200':
          description: The returned Dataset Proposals
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/datasetProposalsList"
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
  /publishing/submission/accept:
    post:
      summary: Accept the submitted Dataset Proposal
      description: |
        This method will accept the Dataset Proposal that was submitted to a Repository.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/publishing-service'
      operationId: acceptDatasetProposal
      security:
        - token_auth: [ ]
      tags:
        - Publishing Service
      parameters:
        - in: query
          name: node_id
          required: true
          schema:
            type: string
            minimum: 1
          description: The Node Id of the Dataset Proposal to be accepted.
      responses:
        '200':
          description: Successfully accepted the Dataset Proposal.
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
  /publishing/submission/reject:
    post:
      summary: Reject the submitted Dataset Proposal
      description: |
        This method will reject the Dataset Proposal that was submitted to a Repository.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/publishing-service'
      operationId: rejectDatasetProposal
      security:
        - token_auth: [ ]
      tags:
        - Publishing Service
      parameters:
        - in: query
          name: node_id
          required: true
          schema:
            type: string
            minimum: 1
          description: The Node Id of the Dataset Proposal to be rejected.
      responses:
        '200':
          description: Successfully rejected the Dataset Proposal.
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /datasets/trashcan:
    get:
      summary: List trashcan contents for a dataset by folder
      description: |
        Returns a list of deleted items from a dataset folder
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/datasets-service'
      operationId: getTrashcan
      security:
        - token_dataset_auth: [ ]
      tags:
        - Datasets Service|Trashcan
      parameters:
        - in: query
          name: dataset_id
          schema:
            type: string
          required: true
          description: dataset node id
        - in: query
          name: root_node_id
          schema:
            type: string
          required: false
          description: folder node id limits returned trashcan items to that folder
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 0
            maximum: 100
            default: 10
          required: false
          description: the maximum number of trashcan items to return
        - in: query
          name: offset
          schema:
            type: integer
            minimum: 0
            default: 0
          required: false
          description: offset used for pagination of results
      responses:
        '200':
          description: The contents of the dataset's trashcan.
          content:
            application/json:
              schema:
                type: object
                properties:
                  limit:
                    type: integer
                  offset:
                    type: integer
                  totalCount:
                    type: integer
                  packages:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        node_id:
                          type: string
                        type:
                          type: string
                        state:
                          type: string
                  messages:
                    type: array
                    items:
                      type: string
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
  /datasets/manifest:
    get:
      summary: Presigned url to manifest of dataset
      description: |
        Returns a presigned URL to a file containing the current manifest of an unpublished dataset.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/datasets-service'
      operationId: getManifest
      security:
        - token_dataset_auth: [ ]
      tags:
        - Datasets Service
      parameters:
        - in: query
          name: dataset_id
          schema:
            type: string
          required: true
          description: dataset node id
      responses:
        '200':
          description: The contents of the dataset's trashcan.
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
  /packages/restore:
    post:
      summary: Restore deleted items
      description: |
        Starts restore process for the given deleted items
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/packages-service'
      operationId: restoreItems
      security:
        - token_dataset_auth: [ ]
      tags:
        - Packages Service
      parameters:
        - in: query
          name: dataset_id
          schema:
            type: string
          required: true
          description: dataset node id
      requestBody:
        description: node ids of the items to restore
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/restoreRequest'
      responses:
        '200':
          description: The result of starting the restore process.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/restoreResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /integrations:
    post:
      summary: Execute integration
      description: |
        Calls endpoint of application with supplied payload
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/integration-service'
      operationId: callIntegration
      deprecated: true
      security:
        - token_auth: [ ]
      tags:
        - Integration Service
      requestBody:
        description: Payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/integrationRequest'
      responses:
        '200':
          description: The result of starting the integration process.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/integrationResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
    get:
      summary: Get integrations
      description: |
        Get a list of integrations
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/integration-service'
      operationId: getIntegrations
      deprecated: true
      security:
        - token_auth: [ ]
      tags:
        - Integration Service
      responses:
        '200':
          description: The requested integrations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/integrationGetResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
    put:
      summary: Update integration
      description: |
        Updates integration with supplied payload
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/integration-service'
      operationId: updateIntegration
      deprecated: true
      security:
        - token_auth: [ ]
      tags:
        - Integration Service
      requestBody:
        description: Payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/integrationRequest'
      responses:
        '200':
          description: The result of updating the integration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/integrationResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /workflows/instances:
    post:
      summary: Initiate workflow instance
      description: |
        Initiates workflow with supplied payload
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/integration-service'
      operationId: initiateWorkflow
      security:
        - token_auth: [ ]
      tags:
        - Integration Service
      requestBody:
        description: Payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/integrationRequest'
      responses:
        '200':
          description: The result of starting the workflow.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/integrationResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
    get:
      summary: Get workflow instances
      description: |
        Get a list of workflow instances
      parameters:
        - in: query
          name: organization_id
          schema:
            type: string
          required: true
          description: The organization ID.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/integration-service'
      operationId: getWorkflowInstances
      security:
        - token_workspace_auth: [ ]
      tags:
        - Integration Service
      responses:
        '200':
          description: The requested workflow instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/integrationGetResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
    put:
      summary: Update a workflow instance
      description: |
        Updates workflow instance using supplied payload
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/integration-service'
      operationId: updateWorkflowInstance
      security:
        - token_auth: [ ]
      tags:
        - Integration Service
      requestBody:
        description: Payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/integrationRequest'
      responses:
        '200':
          description: The result of updating the workflow instance.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/integrationResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /integrations/{id}:
    get:
      summary: Get integration by uuid
      description: |
        Gets integration by integrationId
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/integration-service'
      operationId: getIntegration
      deprecated: true
      security:
        - token_auth: [ ]
      tags:
        - Integration Service
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            minimum: 1
          description: The uuid of the integration.
      responses:
        '200':
          description: The requested integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/integrationGetResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /workflows/instances/{id}:
    get:
      summary: Get workflow instance by uuid
      description: |
        Gets workflow instance by uuid
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/integration-service'
      operationId: getWorkflowInstance
      security:
        - token_auth: [ ]
      tags:
        - Integration Service
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            minimum: 1
          description: The uuid of the workflow instance.
      responses:
        '200':
          description: The requested workflow instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/integrationGetResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /workflows/instances/{id}/status:
    get:
      summary: Get the statuses for a workflow instance
      description: |
        Retrieves the status of for the workflow instance and each of its processors
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/integration-service'
      operationId: getWorkflowInstanceStatus
      security:
        - token_auth: [ ]
      tags:
        - Integration Service
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            minimum: 1
          description: The uuid of the workflow instance
      responses:
        '200':
          description: The requested workflow instance statuses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflowInstanceStatusResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
    put:
      summary: Set a status for a workflow instance
      description: |
        Sets the status of a workflow instance, or one of its processors
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/integration-service'
      operationId: putWorkflowInstanceStatus
      security:
        - token_auth: [ ]
      tags:
        - Integration Service
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            minimum: 1
          description: The uuid of the workflow instance
      requestBody:
        description: workflow instance status event request body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflowInstanceStatusRequest'
      responses:
        '200':
          description: A response indicating a successful status update
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: a message indicating a successful status update
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /workflows/instances/{id}/logs:
    get:
      summary: Get workflow instance processor logs
      description: |
        Gets workflow instance processor logs
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/integration-service'
      operationId: getWorkflowInstanceLogs
      security:
        - token_auth: [ ]
      tags:
        - Integration Service
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            minimum: 1
          description: The uuid of the workflow instance.
        - in: query
          name: applicationUuid
          schema:
            type: string
          required: true
          description: application UUID
      responses:
        '200':
          description: The requested workflow instance logs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflowInstanceLogsGetResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /workflows:
    post:
      summary: Initiate workflow
      description: |
        Calls endpoint of compute node with supplied payload
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/integration-service'
      operationId: startWorflow
      security:
        - token_auth: [ ]
      tags:
        - Integration Service
      requestBody:
        description: Payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflowRequest'
      responses:
        '200':
          description: The result of starting the workflow process.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflowResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /imaging/microct/{package_id}/session:
    post:
      summary: generates temporary access to MicroCT imaging assets
      description: |
        Generates a role with temporary, read-only S3 access to a MicroCT package's viewer assets
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/imaging-service'
      operationId: microctTemporarySession
      security:
        - token_dataset_auth: [ ]
      tags:
        - Imaging Service
      parameters:
        - in: path
          name: package_id
          schema:
            type: string
          required: true
          description: The MicroCT package ID
        - in: query
          name: dataset_id
          schema:
            type: string
          required: true
          description: The dataset in which the MicroCT package exists
      responses:
        '200':
          description: the generated pre-signed URL for upload to S3
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/microctTemporarySessionResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /import:
    post:
      summary: Create import manifest
      description: |
        Calls endpoint on import-service to create an import manifest
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/import-service'
      operationId: createImportManifest
      security:
        - token_dataset_auth: [ ]
      tags:
        - Import Service
      parameters:
        - in: query
          name: dataset_id
          schema:
            type: string
          required: true
          description: The dataset where the files will be imported
      requestBody:
        description: Import Manifest
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createImportManifestRequest'
      responses:
        '201':
          description: Created import manifest.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/importManifestResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
  /import/{import_id}/upload/{upload_key}/presign:
    get:
      summary: generate upload pre-signed URL
      description: |
        Generates an S3 pre-signed URL for uploading an import file to S3
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/import-service'
      operationId: importPresignUpload
      security:
        - token_dataset_auth: [ ]
      tags:
        - Import Service
      parameters:
        - in: path
          name: import_id
          schema:
            type: string
          required: true
          description: The import manifest ID
        - in: path
          name: upload_key
          schema:
            type: string
          required: true
          description: The upload key associated with the file being uploaded
      responses:
        '200':
          description: the generated pre-signed URL for upload to S3
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/importPresignUploadResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /discover/rehydrate:
    post:
      summary: Execute rehydration
      description: |
        Calls endpoint to trigger rehydration process
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/rehydration-service'
      operationId: rehydrate
      tags:
        - Discover/Rehydration Service
      requestBody:
        description: Payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rehydrationRequest'
      responses:
        '200':
          description: The result of starting the rehydration process.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rehydrationResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /readme/docs/{slug}:
    get:
      summary: Get Pennsieve readme.io doc by slug
      description: |
        Gets Pennsieve readme.io doc by slug
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/readme-service'
      operationId: getReadmeDoc
      security:
        - token_auth: [ ]
      tags:
        - Readme Service
      parameters:
        - in: path
          name: slug
          required: true
          schema:
            type: string
          description: The URL-safe slug of the readme.io doc. Slugs must be all lowercase, and replace spaces with hyphens.
      responses:
        '200':
          description: The requested document
          content:
            application/json:
              schema:
                $ref: 'https://dash.readme.com/api/v1/schema#/components/schemas/docSchemaResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /pennsieve-accounts/{accountType}:
    get:
      summary: Get Pennsieve Accounts
      description: |
        Gets Pennsieve Accounts by accountType
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/account-service'
      operationId: getPennsieveAccounts
      security:
        - token_auth: [ ]
      tags:
        - Account Service
      parameters:
        - in: path
          name: accountType
          required: true
          schema:
            type: string
          description: The Pennsieve account type.
      responses:
        '200':
          description: The requested account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pennsieveAccountsGetResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /accounts:
    post:
      summary: Creates an external compute resource account
      description: |
        Creates an account for an external compute resource. Such as an AWS account.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/account-service'
      operationId: postAccounts
      security:
        - token_auth: [ ]
      tags:
        - Account Service
      requestBody:
        description: Payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/accountRequest'
      responses:
        '201':
          description: Successfully created compute resource account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postAccountsResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
    get:
      summary: Get account details for compute resources
      description: |
        Get account details for compute resources
      parameters:
        - in: query
          name: organization_id
          schema:
            type: string
          required: true
          description: The organization ID.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/account-service'
      operationId: getAccounts
      security:
        - token_workspace_auth: [ ]
      tags:
        - Account Service
      responses:
        '200':
          description: The requested compute resource accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/accountsGetResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /accounts/{id}:
    get:
      summary: Get account details for a specific compute resource
      description: |
        Get account details for a specific compute resource
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/account-service'
      operationId: getAccount
      security:
        - token_auth: [ ]
      tags:
        - Account Service
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The uuid of the compute resource account
      responses:
        '200':
          description: The requested compute resource account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accountsGetResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /accounts/github/user:
    get:
      summary: Returns GitHub profile
      description: |
        Returns an existing GitHub profile when user has installed the Pennsieve GitHub App.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/github-service'
      operationId: getGithubUser
      security:
        - token_auth: [ ]
      tags:
        - Account Service
      responses:
        '201':
          description: GitHub profile information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/githubProfileResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
    delete:
      summary: Deletes Pennsieve GitHub App
      description: |
        Deletes the Pennsieve GitHub App from the user's GitHub Account and removes profile from Pennsieve.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/github-service'
      operationId: deleteGithubUser
      security:
        - token_auth: [ ]
      tags:
        - Account Service
      responses:
        '201':
          description: Success message.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /accounts/github/register:
    post:
      summary: Register a Github account for a user
      description: |
        Installs and Authorizes the Pennsieve Github App in the user's Github Account.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/github-service'
      operationId: postGithubRegister
      security:
        - token_auth: [ ]
      tags:
        - Account Service
      requestBody:
        description: Payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/githubPostRegisterRequest'
      responses:
        '201':
          description: Successfully installed and authorized the Pennsieve GitHub App.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/githubProfileResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /compute-nodes:
    post:
      summary: Creates a compute node
      description: |
        Creates a compute-node
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/compute-node-service'
      operationId: postComputeNodes
      security:
        - token_auth: [ ]
      tags:
        - Compute Node Service
      requestBody:
        description: Payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/computeNodeRequest'
      responses:
        '202':
          description: Successfully initiated compute node creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postComputeNodesResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
    get:
      summary: Get compute nodes
      description: |
        Get a list of compute nodes
      parameters:
        - in: query
          name: organization_id
          schema:
            type: string
          required: true
          description: The organization ID.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/compute-node-service'
      operationId: getComputeNodes
      security:
        - token_workspace_auth: [ ]
      tags:
        - Compute Node Service
      responses:
        '200':
          description: The requested compute nodes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/computeNodesGetResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /compute-nodes/{id}:
    get:
      summary: Get details for a specific compute node
      description: |
        Get details for a specific compute node
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/compute-node-service'
      operationId: getComputeNode
      security:
        - token_auth: [ ]
      tags:
        - Compute Node Service
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The uuid of the compute node
      responses:
        '200':
          description: The requested compute node
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/computeNodesGetResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
    delete:
      summary: Delete a specific compute node
      description: |
        Delete a specific compute node
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/compute-node-service'
      operationId: deleteComputeNode
      security:
        - token_auth: [ ]
      tags:
        - Compute Node Service
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The uuid of the compute node
      responses:
        '202':
          description: Successfully initiated compute node deletion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteComputeNodesResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /applications:
    post:
      summary: Creates an application
      description: |
        Creates an application
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/app-deploy-service'
      operationId: postApplications
      security:
        - token_auth: [ ]
      tags:
        - App Deploy Service
      requestBody:
        description: Payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/applicationRequest'
      responses:
        '202':
          description: Successfully initiated application creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postApplicationsResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
    get:
      summary: Get applications
      description: |
        Get a list of applications
      parameters:
        - in: query
          name: organization_id
          schema:
            type: string
          required: true
          description: The organization ID.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/app-deploy-service'
      operationId: getApplications
      security:
        - token_workspace_auth: [ ]
      tags:
        - App Deploy Service
      responses:
        '200':
          description: The requested applications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/applicationsGetResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /applications/{id}:
    get:
      summary: Get details for a specific application
      description: |
        Get details for a specific application
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/app-deploy-service'
      operationId: getApplication
      security:
        - token_auth: [ ]
      tags:
        - App Deploy Service
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The uuid of the application
      responses:
        '200':
          description: The requested application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applicationsGetResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
    delete:
      summary: Delete a specific application
      description: |
        Delete a specific application
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/app-deploy-service'
      operationId: deleteApplication
      security:
        - token_auth: [ ]
      tags:
        - App Deploy Service
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The uuid of the application
      responses:
        '202':
          description: Successfully initiated application deletion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteApplicationsResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
    put:
      summary: Update the properties of an application
      description: |
        Update the properties of an application
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/app-deploy-service'
      operationId: updateApplication
      security:
        - token_auth: [ ]
      tags:
        - App Deploy Service
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The uuid of the application
      requestBody:
        description: Payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/applicationRequest'
      responses:
        '200':
          description: Successfully updated application properties
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postApplicationsResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /applications/{id}/deployments:
    get:
      summary: Get the deployment history for an application
      description: |
        Get the deployment history for an application
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/app-deploy-service'
      operationId: getDeployments
      security:
        - token_workspace_auth: [ ]
      tags:
        - App Deploy Service
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The uuid of the application
        - in: query
          name: organization_id
          required: true
          schema:
            type: string
          description: the node id of the application's workspace
      responses:
        '200':
          description: The requested deployment history
          content:
            application/json:
              schema:
                type: object
                properties:
                  deployments:
                    type: array
                    items:
                      $ref: '#/components/schemas/getDeploymentResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/Error'

  /applications/{id}/deployments/{deploymentId}:
    get:
      summary: Get the details for a specific application deployment
      description: |
        Get the details for a specific application deployment
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/app-deploy-service'
      operationId: getDeployment
      security:
        - token_workspace_auth: [ ]
      tags:
        - App Deploy Service
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The uuid of the application
        - in: path
          name: deploymentId
          required: true
          schema:
            type: string
          description: The uuid of the deployment
        - in: query
          name: organization_id
          required: true
          schema:
            type: string
          description: the node id of the application's workspace
      responses:
        '200':
          description: The requested deployment details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDeploymentResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/Error'

  /applications/deploy:
    post:
      summary: Deploys an application from a source to a destination
      description: |
        Deployes an application
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/app-deploy-service'
      operationId: postApplicationDeploy
      security:
        - token_auth: [ ]
      tags:
        - App Deploy Service
      requestBody:
        description: Payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/applicationDeployRequest'
      responses:
        '202':
          description: Successfully initiated application deployment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postApplicationsDeployResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /repository/enable:
    post:
      summary: Enable tracking of an external repository
      description: |
        Begins tracking of an external repository for publishing or the AppStore.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/github-service'
      operationId: postEnableTrackingExternalRepo
      security:
        - token_workspace_auth: [ ]
      tags:
        - GitHub Service
      requestBody:
        description: Payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/trackRepositoryRequest'
      responses:
        '201':
          description: Successfully enabled tracking of the external repository.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalRepository'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /repository/disable:
    post:
      summary: Disable tracking of an external repository
      description: |
        Stops tracking of an external repository for publishing or the AppStore.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/github-service'
      operationId: postDisableTrackingExternalRepo
      security:
        - token_workspace_auth: [ ]
      tags:
        - GitHub Service
      requestBody:
        description: Payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/trackRepositoryRequest'
      responses:
        '201':
          description: Successfully disabled tracking of the external repository.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalRepository'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /repository/external:
    put:
      summary: Update the attributes of an external repository
      description: |
        Updates the External Repository and the attached Dataset
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/github-service'
      operationId: updateExternalRepo
      security:
        - token_workspace_auth: [ ]
      tags:
        - Repository Service
      requestBody:
        description: Payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRepositoryRequest'
      responses:
        '200':
          description: Successfully updated the external repository.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalRepository'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /repository/publish:
    post:
      summary: request publishing of an external repository
      description: |
        Requests that an external repository be published.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/github-service'
      security:
        - token_workspace_auth: [ ]
      operationId: publishRepository
      tags:
        - Repository Service
      requestBody:
        description: Payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/publishRepositoryRequest'
      responses:
        '201':
          description: Successfully published the external repository.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalRepository'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /repositories:
    get:
      summary: Get all Repositories that the authenticated user has access to
      description: |
        Returns a list of Repositories from all sources (origins) that a user has access to, and indicates whether |
        a repository is being tracked for publishing, app-store, or other purpose. This endpoint is paginated.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/github-service'
      security:
        - token_auth: [ ]
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          required: false
          description: the page number to return
        - in: query
          name: size
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 25
          required: false
          description: the number of items to return on each page
      operationId: getMyRepositories
      tags:
        - Repository Service
      responses:
        '200':
          description: List of Repositories.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/repositoriesResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /repositories/github:
    get:
      summary: Get GitHub Repositories
      description: |
        List repositories for the authenticated GitHub user
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/github-service'
      security:
        - token_auth: [ ]
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          required: false
          description: the page number to return
        - in: query
          name: size
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 25
          required: false
          description: the number of items to return on each page
      operationId: getGitHubRepositories
      tags:
        - GitHub Service
      responses:
        '200':
          description: List of GitHub repositories.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/githubReposResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /repositories/external:
    get:
      summary: Get External Repositories
      description: |
        List registered external repositories for the authenticated user
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/github-service'
      security:
        - token_auth: [ ]
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          required: false
          description: the page number to return
        - in: query
          name: size
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 25
          required: false
          description: the number of items to return on each page
      operationId: getExternalRepositories
      tags:
        - Repository Service
      responses:
        '200':
          description: List of GitHub repositories.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalReposResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /webhooks/github:
    post:
      summary: GitHub Webhook entrypoint
      description: |
        Receives GitHub events
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/github-service'
      operationId: webhookEndpointForGitHub
      tags:
        - GitHub Service
      requestBody:
        description: Payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/githubWebhookEvent'
      responses:
        '200':
          description: Received and accepted GitHub webhook event.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/githubWebhookEventAccepted'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /ga4gh/drs/v1/objects/{object_id}:
    get:
      operationId: getUserById
      summary: "Get info about a DrsObject"
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/drs-service'
      description: |
        Returns object metadata, and a list of access methods that can be used to fetch object bytes.
        If the `expand` query parameter is set to `true` and the object_id refers to a bundle, the entire set of objects in the bundle is expanded and included in the result.
      tags:
        - DRS Service
      parameters:
        - name: object_id
          in: path
          required: true
          schema:
            type: string
          description: "DrsObject identifier"
        - name: expand
          in: query
          required: false
          schema:
            type: boolean
          description: |
            If false and the object_id refers to a bundle, then the ContentsObject array contains only those objects directly contained in the bundle. 
            If true and the object_id refers to a bundle, then the entire set of objects in the bundle is expanded. 
            Recursion continues through the entire sub-tree of the bundle.
      responses:
        '200':
          description: "Successful response containing the DrsObject information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/drsObjectResponse'
        '404':
          description: "DrsObject not found"
        '401':
          description: "Unauthorized"
      security: [ ]

    post:
      operationId: postUserById
      summary: "Get info about a DrsObject through POST'ing a Passport"
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/drs-service'
      description: |
        Returns object metadata, and a list of access methods that can be used to fetch object bytes.
        Method is a POST to accommodate a JWT GA4GH Passport sent in the formData in order to authorize access.
      tags:
        - DRS Service
      parameters:
        - name: object_id
          in: path
          required: true
          schema:
            type: string
          description: "DrsObject identifier"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getDrsObjectWithPassportRequest'
      responses:
        '200':
          description: "Successful response containing the DrsObject information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDrsObjectWithPassportResponse'
        '404':
          description: "DrsObject not found"
        '401':
          description: "Unauthorized"
      security:
        - PassportAuth: [ ]

  /ga4gh/drs/v1/objects:
    post:
      operationId: getUserObject
      summary: "Get info about multiple DrsObjects with an optional Passport(s)"
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/drs-service'
      description: |
        Returns an array of object metadata, and a list of access methods that can be used to fetch objects' bytes.
        Currently this is limited to use passports (one or more) or a single bearer token, so make sure your bulk request is for objects that all use the same passports/token.
      tags:
        - DRS Service
      parameters:
        - name: expand
          in: query
          required: false
          schema:
            type: boolean
          description: |
            If false and the object_id refers to a bundle, then the ContentsObject array contains only those objects directly contained in the bundle.
            If true and the object_id refers to a bundle, then the entire set of objects in the bundle is expanded.
            Recursion continues through the entire sub-tree of the bundle. If the object_id refers to a blob, then the query parameter is ignored.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/multipleDrsObjectsRequest'
      responses:
        '200':
          description: "Successful response containing the DrsObjects information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/multipleDrsObjectsResponse'
        '404':
          description: "DrsObject(s) not found"
        '401':
          description: "Unauthorized"
      security:
        - PassportAuth: [ ]


  /ga4gh/drs/v1/objects/{object_id}/access/{access_id}:
    get:
      operationId: getUserbyAccessId
      summary: "Get a URL for fetching bytes"
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/drs-service'
      description: |
        Returns a URL that can be used to fetch the bytes of a DrsObject. 
        This method only needs to be called when using an AccessMethod that contains an access_id 
        (e.g., for servers that use signed URLs for fetching object bytes).
      tags:
        - DRS Service
      parameters:
        - name: object_id
          in: path
          required: true
          schema:
            type: string
          description: "DrsObject identifier"
        - name: access_id
          in: path
          required: true
          schema:
            type: string
          description: "An access_id from the access_methods list of a DrsObject"
      responses:
        '200':
          description: "The AccessURL was found successfully"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fetchUrlResponse'
        '404':
          description: "Access URL not found"
        '401':
          description: "Unauthorized"
      security: [ ]

    post:
      operationId: postUserbyAccessId
      summary: "Get a URL for fetching bytes through POST'ing a Passport"
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/drs-service'
      description: |
        Returns a URL that can be used to fetch the bytes of a DrsObject. 
        This method only needs to be called when using an AccessMethod that contains an access_id 
        (e.g., for servers that use signed URLs for fetching object bytes). 
        Method is a POST to accommodate a JWT GA4GH Passport sent in the formData in order to authorize access.
      tags:
        - DRS Service
      parameters:
        - name: object_id
          in: path
          required: true
          schema:
            type: string
          description: "DrsObject identifier"
        - name: access_id
          in: path
          required: true
          schema:
            type: string
          description: "An access_id from the access_methods list of a DrsObject"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fetchUrlWithPassportRequest'
      responses:
        '200':
          description: "The AccessURL was found successfully"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fetchUrlResponse'
        '404':
          description: "Access URL not found"
        '401':
          description: "Unauthorized"
      security:
        - PassportAuth: [ ]
  /ga4gh/drs/v1/objects/access:
    post:
      operationId: postAllObjects
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/drs-service'
      summary: "Get URLs for fetching bytes from multiple objects with an optional Passport(s)"
      description: |
        Returns an array of URL objects that can be used to fetch the bytes of multiple DrsObjects. 
        This method only needs to be called when using an AccessMethod that contains an access_id 
        (e.g., for servers that use signed URLs for fetching object bytes). 
        Currently this is limited to use passports (one or more) or a single bearer token, 
        so make sure your bulk request is for objects that all use the same passports/token.
      tags:
        - DRS Service
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bulkFetchUrlsRequest'
      responses:
        '200':
          description: "Successful response containing the AccessURLs"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bulkFetchUrlsResponse'
        '404':
          description: "Access URLs not found"
        '401':
          description: "Unauthorized"
      security:
        - PassportAuth: [ ]

  /ga4gh/drs/v1/service-info:
    get:
      summary: "Retrieve information about this service"
      description: |
        Returns information about the DRS service based on GA4GH Service Info specification.
      responses:
        '200':
          description: A JSON object with details about the DRS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInfoResponse'
        '500':
          description: "Internal server error. Something went wrong on the server side."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
