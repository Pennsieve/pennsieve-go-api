openapi: 3.0.1
info:
  version: 1.0.0
  title: Pennsieve API Version 2
  description: |
    Version 2 of the Pennsieve API.\
    \
    This is the second iteration of the Pennsieve API and will, over time, replace functionality that is currently included in the first version of the API.
  termsOfService: https://docs.pennsieve.io/page/pennsieve-terms-of-use
  contact:
    name: Pennsieve Support
    email: support@pennsieve.net
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://api2.pennsieve.io
    description: Production server
  - url: https://api2.pennsieve.net
    description: Development server
externalDocs:
  description: Find more info here
  url: https://docs.pennsieve.io
tags:
  - name: Upload Service
    description: Management of upload manifests.
    externalDocs:
      url: https://docs.pennsieve.io/reference
components:
  x-amazon-apigateway-integrations:
    manifest-service:
      type: aws_proxy
      uri: ${upload_service_lambda_arn}
      httpMethod: POST
      passthroughBehavior: when_no_match
      contentHandling: CONVERT_TO_TEXT
      payloadFormatVersion: 2.0
    model-service:
      type: aws_proxy
      uri: ${model_service_lambda_arn}
      httpMethod: POST
      passthroughBehavior: when_no_match
      contentHandling: CONVERT_TO_TEXT
      payloadFormatVersion: 2.0
    publishing-service:
      type: aws_proxy
      uri: ${publishing_service_lambda_arn}
      httpMethod: POST
      passthroughBehavior: when_no_match
      contentHandling: CONVERT_TO_TEXT
      payloadFormatVersion: 2.0
    datasets-service:
      type: aws_proxy
      uri: ${datasets_service_lambda_arn}
      httpMethod: POST
      passthroughBehavior: when_no_match
      contentHandling: CONVERT_TO_TEXT
      payloadFormatVersion: 2.0
  securitySchemes:
    token_manifest_auth:
      type: "apiKey"
      name: "Unused"
      in: "header"
      x-amazon-apigateway-authorizer:
        identitySource: "$request.header.Authorization,$request.querystring.manifest_id"
        authorizerUri: ${authorize_lambda_invoke_uri}
        authorizerPayloadFormatVersion: "2.0"
        authorizerResultTtlInSeconds: 300
        type: "request"
        enableSimpleResponses: true
        authorizerCredentials: ${gateway_authorizer_role}
    token_dataset_auth:
      type: "apiKey"
      name: "Unused"
      in: "header"
      x-amazon-apigateway-authorizer:
        identitySource: "$request.header.Authorization,$request.querystring.dataset_id"
        authorizerUri: ${authorize_lambda_invoke_uri}
        authorizerPayloadFormatVersion: "2.0"
        authorizerResultTtlInSeconds: 300
        type: "request"
        enableSimpleResponses: true
        authorizerCredentials: ${gateway_authorizer_role}
    # token_path_dataset_auth will use the full request path, e.g., '/datasests/{dataset_id}/subresource' as port of the cache key
    # for the authz result, so it should only be used if the only path parameter is {dataset_id}
    token_path_dataset_auth:
      type: "apiKey"
      name: "Unused"
      in: "header"
      x-amazon-apigateway-authorizer:
        identitySource: "$request.header.Authorization,$context.path"
        authorizerUri: ${authorize_lambda_invoke_uri}
        authorizerPayloadFormatVersion: "2.0"
        authorizerResultTtlInSeconds: 300
        type: "request"
        enableSimpleResponses: true
        authorizerCredentials: ${gateway_authorizer_role}
    token_auth:
      type: "apiKey"
      name: "Authorization"
      in: "header"
      x-amazon-apigateway-authorizer:
        identitySource: "$request.header.Authorization"
        authorizerUri: ${authorize_lambda_invoke_uri}
        authorizerPayloadFormatVersion: "2.0"
        authorizerResultTtlInSeconds: 300
        type: "request"
        enableSimpleResponses: true
        authorizerCredentials: ${gateway_authorizer_role}
  responses:
    Unauthorized:
      description: Incorrect authentication or user has incorrect permissions.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    Error:
      description: Server Error
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
  schemas:
    user:
      type: object
      properties:
        id:
          type: integer
          description: UserId.
        firstName:
          type: string
          description: Firstname of the user.
        lastName:
          type: string
          description: Lastname of the user.
    manifestCreateRequest:
      type: object
      properties:
        id:
          type: string
          description: UUID of the manifest.
        files:
          $ref: '#/components/schemas/manifestFiles'
    addFilesResponse:
      type: object
      description: Response for addFiles endpoint.
      properties:
        nrFilesAdded:
          description: Number of added files to the manifest.
          type: integer
        failedFiles:
          description: Array of uploadIds that were not added to manifest.
          type: array
          items:
            type: string
    autocompleteResponse:
      type: object
      description: Response for autocomplet endpoint.
      properties:
        values:
          description: Array of values.
          type: array
          items:
            type: string
    manifestFiles:
      type: array
      items:
        type: object
        properties:
          uploadId:
            type: string
            description: The upload id for the file.
          s3Key:
            type: string
            description: The S3-key for the uploaded asset. (typically sessionID/uploadID)
          targetPath:
            type: string
            description: Absolute path in the datset where the file should be uploaded to.
          targetName:
            type: string
            description: Name of the uploaded file as it should appear on the platform. This includes the extension of the file.
paths:
  /manifest:
    get:
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/manifest-service'
      operationId: getManifestList
      summary: List manifests for dataset
      description: |
        Returns a list of manifests that are defined for a dataset.
      parameters:
        - in: query
          name: dataset_id
          schema:
            type: string
          required: true
          description: The dataset for which we want to retrieve datasets.
      security:
        - token_dataset_auth: [ ]
      tags:
        - Upload Service
      responses:
        '200':
          description: A list of manifests.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: UUID of the manifest.
                    dataset:
                      type: string
                      description: UUID of the dataset where files will be uploaded to.
                    organization:
                      type: string
                      description: Name of the organization where the dataset is located.
                    status:
                      type: string
                      description: Status of the manifest.
                    created:
                      type: string
                      description: Date when the manifest was created.
                    updated:
                      type: string
                      description: Date when the manifest was last updated.
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
    post:
      summary: Synchronize manifest
      description: |
        Method to create a new manifest on the server, or to synchronize local updates to the server for existing manifests.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/manifest-service'
      operationId: syncManifest
      security:
        - token_dataset_auth: [ ]
      tags:
        - Upload Service
      parameters:
        - in: query
          name: dataset_id
          schema:
            type: string
          required: true
          description: The dataset where file will be uploaded.
      requestBody:
        description: Create a new upload manifest with files
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/manifestCreateRequest'
      responses:
        '200':
          description: The created manifest.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addFilesResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
  /manifest/files:
    get:
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/manifest-service'
      operationId: getManifestFiles
      summary: Get files for manifest
      security:
        - token_manifest_auth: [ ]
      tags:
        - Upload Service
      description: |
        Returns a paginated list of files that are associated with an upload manifest. \
      parameters:
        - in: query
          name: manifest_id
          required: true
          schema:
            type: string
            minimum: 1
          description: The UUID of the Upload Manifest.
        - in: query
          name: continuation_token
          schema:
            type: string
          required: false
          description: The UploadID of the last returned item in the previous page.
        - in: query
          name: limit
          schema:
            type: integer
            default: 100
            maximum: 1000
          description: The number of returned files per page.
        - in: query
          name: status
          schema:
            type: string
            enum:
              - Initiated
              - Synced
              - Imported
              - Finalized
              - Verified
              - Failed
              - Removed
              - Unknown
              - null
          required: false
          description: Filter by upload status.
      responses:
        '200':
          description: The requested files for a manifest.
          content:
            application/json:
              schema:
                type: object
                description: Successfull created new manifest.
                properties:
                  id:
                    type: string
                    description: UUID of the manifest.
                  dataset:
                    type: string
                    description: UUID of the dataset where files will be uploaded to.
                  organization:
                    type: string
                    description: Name of the organization where the dataset is located.
                  status:
                    type: string
                    description: Status of the manifest.
                  created:
                    type: string
                    description: Date when the manifest was created.
                  updated:
                    type: string
                    description: Date when the manifest was last updated.
                  files:
                    $ref: '#/components/schemas/manifestFiles'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
    delete:
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/manifest-service'
      operationId: deleteManifest
      summary: Delete manifest
      security:
        - token_auth: [ ]
      tags:
        - Upload Service
      description: |
        Deleting a manifest can be useful when a manifest was created but is no longer expected to be uploaded.\
        \
        If a manifest is deleted which already was deleted due to completion of the upload, this method returns success.
      parameters:
        - in: query
          name: manifestId
          required: true
          schema:
            type: string
            minimum: 1
          description: The UUID of the Upload Manifest.
      responses:
        '200':
          description: Successfully deleted the manifest.
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
        default:
          description: Success
  /manifest/status:
    get:
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/manifest-service'
      operationId: verifyFileStatus
      summary: Verify status for manifest files
      security:
        - token_manifest_auth: [ ]
      tags:
        - Upload Service
      description: |
        Returns a list of files that have the requested status on the server for the given manifest.\
        \
        You can use this endpoint to check import progress of files during or after uploading a manifest.
      parameters:
        - in: query
          name: manifest_id
          required: true
          schema:
            type: string
            minimum: 1
          description: The UUID of the Upload Manifest.
        - in: query
          name: continuation_token
          schema:
            type: string
          required: false
          description: The UploadID of the last returned item in the previous page.
        - in: query
          name: status
          schema:
            type: string
            enum:
              - Synced
              - Imported
              - Finalized
              - Verified
              - Failed
          required: true
          description: Filter by upload status.
        - in: query
          name: verify
          required: false
          schema:
            type: boolean
          description: Update status to verified for returned files. If checked, this will always check for Finalized status.
      responses:
        '200':
          description: The requested files for a manifest.
          content:
            application/json:
              schema:
                type: object
                description: Successfull returned list of files with requested status.
                properties:
                  id:
                    type: string
                    description: UUID of the manifest.
                  status:
                    type: string
                    description: The current status of the returned files.
                  files:
                    type: array
                    description: List of upload ids for files with requested status.
                    items:
                      type: string
                  continuation_token:
                    type: string
                    description: ID of the last returned item.
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
  /metadata/models:
    get:
      summary: Get models for dataset
      description: |
        This method returns a list of models that are defined in a dataset.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/model-service'
      operationId: graphGetModels
      security:
        - token_dataset_auth: [ ]
      tags:
        - Metadata Service
      parameters:
        - in: query
          name: dataset_id
          schema:
            type: string
          required: true
          description: The dataset where file will be uploaded.
      responses:
        '200':
          description: The returned models.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: Response for getModels endpoint.
                  properties:
                    Count:
                      description: Number of added files to the manifest.
                      type: integer
                    CreatedAt:
                      description: Array of uploadIds that were not added to manifest.
                      type: string
                    CreatedBy:
                      description: Array of uploadIds that were not added to manifest.
                      type: string
                    Description:
                      description: Array of uploadIds that were not added to manifest.
                      type: string
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
  /metadata/query:
    post:
      summary: Search metadata graph
      description: |
        Method to create a new manifest on the server, or to synchronize local updates to the server for existing manifests.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/model-service'
      operationId: queryGraph
      security:
        - token_dataset_auth: [ ]
      tags:
        - Metadata Service|Search
      parameters:
        - in: query
          name: dataset_id
          schema:
            type: string
          required: true
          description: The dataset for which we want to retrieve datasets.
      requestBody:
        description: Query Filters
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request body for metadata querying.
              properties:
                model:
                  type: string
                  description: Requested type of returned objects.
                datasets:
                  type: array
                  description: Array of dataset node ids to search over.
                  items:
                    type: string
                filters:
                  type: array
                  description: Array of filters for the query.
                  items:
                    type: object
                    description: Filter object for query.
                    properties:
                      model:
                        type: string
                        description: The name of the model.
                      property:
                        type: string
                        description: The name of a property in the model.
                      operator:
                        type: string
                        enum:
                          - IS
                          - IS NOT
                          - EQUALS
                          - NOT EQUALS
                          - LESS THAN
                          - LESS THAN EQUALS
                          - GREATER THAN
                          - GREATER THAN EQUALS
                          - STARTS WITH
                          - CONTAINS
                      value:
                        type: string
                        description: The value of the predicate
                order_by:
                  type: string
                  description: Name of property that should be used to order the results.
      responses:
        '200':
          description: The returned results.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addFilesResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /metadata/query/autocomplete:
    post:
      summary: Autocomplete for search
      description: |
        This endpoint returns a list of values that will return in valid query responses that include a minimum of 1 search result.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/model-service'
      operationId: autoComplete
      security:
        - token_dataset_auth: [ ]
      tags:
        - Metadata Service|Search
      parameters:
        - in: query
          name: dataset_id
          schema:
            type: string
          required: true
          description: The dataset for which we want to retrieve datasets.
      requestBody:
        description: Query Filters
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request body for metadata querying.
              properties:
                model:
                  type: string
                  description: Model for autocomplete
                property:
                  type: string
                  description: Property for autocomplete
                text:
                  type: string
                  description: Value input for autocomplete.
                filters:
                  type: array
                  description: Array of filters for the query
                  items:
                    type: object
                    description: Filter object for query.
                    properties:
                      model:
                        type: string
                        description: The name of the model.
                      property:
                        type: string
                        description: The name of a property in the model.
                      operator:
                        type: string
                        enum:
                          - IS
                          - IS NOT
                          - EQUALS
                          - NOT EQUALS
                          - LESS THAN
                          - LESS THAN EQUALS
                          - GREATER THAN
                          - GREATER THAN EQUALS
                          - STARTS WITH
                          - CONTAINS
                      value:
                        type: string
                        description: The value of the predicate
      responses:
        '200':
          description: The returned results.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/autocompleteResponse'
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'

  /metadata/records/relationships:
    post:
      summary: Create record relationships
      description: |
        Allows the user to create relationships in bulk between existing records for a specific dataset.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/model-service'
      operationId: batchCreateRelationships
      security:
        - token_dataset_auth: [ ]
      tags:
        - Metadata Service|Records
      parameters:
        - in: query
          name: dataset_id
          schema:
            type: string
          required: true
          description: The dataset associated with the metadata that is edited
      requestBody:
        description: definition of the relationship and records to be created.
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request body for metadata querying.
              properties:
                relationship:
                  type: object
                  properties:
                    from_model:
                      type: string
                      description: Model slug for the originating model
                    relationship_name:
                      type: string
                      description: Relationship slug; direction is automatically inferred
                    to_model:
                      type: string
                      description: Model slug for the targeted model
                records:
                  type: object
                  properties:
                    from:
                      type: array
                      items:
                        type: string
                        description: List of object IDs of records of type from_model
                    to:
                      type: array
                      items:
                        type: string
                        description: List of object IDs of records of type to_model
      responses:
        '200':
          description: The returned results.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    from:
                      type: string
                    to:
                      type: string
                    type:
                      type: string
                    model_relationship_id:
                      type: string
                    name:
                      type: string
                    one_to_many:
                      type: boolean
                    created_at:
                      type: string
                    updated_at:
                      type: string
                    created_by:
                      type: string
                    updated_by:
                      type: string
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
  /publishing:
    get:
      summary: Get Publishing Repositories
      description: |
        This method returns a list of Publishing Repositories.
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/publishing-service'
      operationId: getPublishingRepositories
      security:
        - token_auth: [ ]
      tags:
        - Publishing Service
      responses:
        '200':
          description: The returned Publishing Repositories.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: Response for getPublishingRepositories endpoint.
                  properties:
                    Count:
                      description: Number of Publishing Repositories.
                      type: integer
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
  /datasets/{dataset_id}/trashcan:
    get:
      summary: List trashcan contents for a dataset
      description: |
        Returns a list of items in a dataset's trashcan
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/datasets-service'
      operationId: getTrashcan
      security:
        - token_path_dataset_auth: [ ]
      tags:
        - Datasets Service|Trashcan
      parameters:
        - in: path
          name: dataset_id
          schema:
            type: string
          required: true
          description: dataset node id
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 0
            maximum: 100
            default: 10
          required: false
          description: the maximum number of trashcan items to return
        - in: query
          name: offset
          schema:
            type: integer
            minimum: 0
            default: 0
          required: false
          description: offset used for pagination of results
      responses:
        '200':
          description: The contents of the dataset's trashcan.
          content:
            application/json:
              schema:
                type: object
                properties:
                  limit:
                    type: integer
                  offset:
                    type: integer
                  totalCount:
                    type: integer
                  packages:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        path:
                          type: string
                  messages:
                    type: array
                    items:
                      type: string
        '4XX':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/Error'
